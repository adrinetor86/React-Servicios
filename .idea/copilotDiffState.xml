<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/components/ServiceApiSuppliers.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/ServiceApiSuppliers.js" />
              <option name="originalContent" value="import React, {Component} from 'react';&#10;import axios from 'axios';&#10;import Global from &quot;../Global&quot;;&#10;&#10;class ServiceApiSuppliers extends Component {&#10;    state={&#10;        customers: [],&#10;        persona:[],&#10;    }&#10;    // url = &quot;https://services.odata.org/V4/Northwind/Northwind.svc/Suppliers&quot;&#10;    url = Global.urlNortwind&#10;&#10;    cajaId = React.createRef();&#10;&#10;    generarPeticion = (event) =&gt; {&#10;        event.preventDefault();&#10;        console.log(&quot;Servicio&quot;);&#10;        let idSupplier=parseInt(this.cajaId.current.value);&#10;        //REALIZAMOS LA PETICION DE NUEVO A TODOS LOS PROVEEDORES&#10;        let request =&quot;Suppliers&quot;&#10;&#10;        console.log(this.url+request)&#10;        //VERSION 2&#10;        axios.get(this.url+request).then((response) =&gt; {&#10;&#10;            for (var supplier of response.data.value) {&#10;&#10;                if (supplier.id == idSupplier) {&#10;                    this.setState({&#10;                        persona: supplier,&#10;                    })&#10;                    break;&#10;                }&#10;            }&#10;        })&#10;    }&#10;&#10;&#10;    loadCustomers = () =&gt; {&#10;        console.log(&quot;Antes del servicio&quot;);&#10;        let request =&quot;Suppliers&quot;&#10;        axios.get(this.url+request).then((response) =&gt; {&#10;            console.log(&quot;Leyendo el servicio&quot;);&#10;&#10;            this.setState({&#10;                customers: response.data.value&#10;            })&#10;        })&#10;        console.log(&quot;Despues del servicio&quot;);&#10;    }&#10;&#10;    componentDidMount() {&#10;        console.log(&quot;Antes del componente&quot;);&#10;        this.loadCustomers();&#10;    }&#10;    cargarDatos=()=&gt;{&#10;        let id;&#10;        id= parseInt(this.cajaId.current.value);&#10;&#10;        console.log(this.state.customers[id-1]);&#10;        let persona=[]&#10;        persona.push(this.state.customers[id-1]);&#10;&#10;        this.setState({&#10;&#10;            persona:persona&#10;        })&#10;        //LOS STATE EN EL CONSOLE.LOG PUEDEN DAR FALSO POSITIVO!!!&#10;        console.log(this.state.persona);&#10;    }&#10;&#10;    render() {&#10;        return (&#10;            &lt;div&gt;&#10;                &lt;h1&gt;Datos Api Suppliers&lt;/h1&gt;&#10;                &lt;form onSubmit={this.generarPeticion}&gt;&#10;                    &lt;label&gt;ID:&lt;/label&gt;&#10;                    &lt;input required type=&quot;number&quot; ref={this.cajaId}/&gt;&#10;&#10;                    &lt;button onClick={this.cargarDatos}&gt;Cargar Datos&#10;                    &lt;/button&gt;&#10;                &lt;/form&gt;&#10;&#10;                {/*PREGUNTAR TAMBIEN COMO FUNCIONA LO DEL RETURN */}&#10;                {&#10;                    this.state.persona.length &gt; 0 &amp;&amp;&#10;&#10;                        &lt;table border=&quot;1&quot; cellPadding=&quot;5&quot; style={{ marginTop: &quot;20px&quot; }}&gt;&#10;                            &lt;thead&gt;&#10;                            &lt;tr&gt;&#10;                                &lt;th&gt;&lt;/th&gt;&#10;                                &lt;th&gt;&lt;/th&gt;&#10;                            &lt;/tr&gt;&#10;                            &lt;/thead&gt;&#10;                            &lt;tbody&gt;&#10;                            &lt;tr&gt;&lt;td&gt;ID&lt;/td&gt;&lt;td&gt;{this.state.persona[0].SupplierID}&lt;/td&gt;&lt;/tr&gt;&#10;                            &lt;tr&gt;&lt;td&gt;Company&lt;/td&gt;&lt;td&gt;{this.state.persona[0].CompanyName}&lt;/td&gt;&lt;/tr&gt;&#10;                            &lt;tr&gt;&lt;td&gt;Name&lt;/td&gt;&lt;td&gt;{this.state.persona[0].ContactName}&lt;/td&gt;&lt;/tr&gt;&#10;                            &lt;tr&gt;&lt;td&gt;Title&lt;/td&gt;&lt;td&gt;{this.state.persona[0].ContactTitle}&lt;/td&gt;&lt;/tr&gt;&#10;                            &lt;tr&gt;&lt;td&gt;Address&lt;/td&gt;&lt;td&gt;{this.state.persona[0].Address}&lt;/td&gt;&lt;/tr&gt;&#10;                            &lt;tr&gt;&lt;td&gt;City&lt;/td&gt;&lt;td&gt;{this.state.persona[0].City}&lt;/td&gt;&lt;/tr&gt;&#10;                            &lt;tr&gt;&lt;td&gt;Region&lt;/td&gt;&lt;td&gt;{this.state.persona[0].Region}&lt;/td&gt;&lt;/tr&gt;&#10;                            &lt;tr&gt;&lt;td&gt;Postal Code&lt;/td&gt;&lt;td&gt;{this.state.persona[0].PostalCode}&lt;/td&gt;&lt;/tr&gt;&#10;                            &lt;tr&gt;&lt;td&gt;Country&lt;/td&gt;&lt;td&gt;{this.state.persona[0].Country}&lt;/td&gt;&lt;/tr&gt;&#10;                            &lt;tr&gt;&lt;td&gt;Phone&lt;/td&gt;&lt;td&gt;{this.state.persona[0].Phone}&lt;/td&gt;&lt;/tr&gt;&#10;                            &lt;tr&gt;&lt;td&gt;Fax&lt;/td&gt;&lt;td&gt;{this.state.persona[0].Fax}&lt;/td&gt;&lt;/tr&gt;&#10;                            &lt;tr&gt;&lt;td&gt;Home Page&lt;/td&gt;&lt;td&gt;{this.state.persona[0].HomePage}&lt;/td&gt;&lt;/tr&gt;&#10;                            &lt;/tbody&gt;&#10;                        &lt;/table&gt;&#10;&#10;                }&#10;                &lt;ul&gt;&#10;                    {&#10;                        this.state.customers.map((persona, index) =&gt; {&#10;&#10;                            return &lt;li key={index}&gt;ID: {persona.SupplierID} Nombre: {persona.ContactName}&lt;/li&gt;&#10;                        })&#10;                    }&#10;                &lt;/ul&gt;&#10;            &lt;/div&gt;&#10;        );&#10;&#10;    }&#10;}&#10;&#10;export default ServiceApiSuppliers;" />
              <option name="updatedContent" value="import React, {Component} from 'react';&#10;import axios from 'axios';&#10;import Global from &quot;../Global&quot;;&#10;import '../styles/TableModern.css';&#10;&#10;class ServiceApiSuppliers extends Component {&#10;    state={&#10;        customers: [],&#10;        persona:[],&#10;    }&#10;    // url = &quot;https://services.odata.org/V4/Northwind/Northwind.svc/Suppliers&quot;&#10;    url = Global.urlNortwind&#10;&#10;    cajaId = React.createRef();&#10;&#10;    generarPeticion = (event) =&gt; {&#10;        event.preventDefault();&#10;        console.log(&quot;Servicio&quot;);&#10;        let idSupplier=parseInt(this.cajaId.current.value);&#10;        //REALIZAMOS LA PETICION DE NUEVO A TODOS LOS PROVEEDORES&#10;        let request =&quot;Suppliers&quot;&#10;&#10;        console.log(this.url+request)&#10;        //VERSION 2&#10;        axios.get(this.url+request).then((response) =&gt; {&#10;&#10;            for (var supplier of response.data.value) {&#10;&#10;                if (supplier.id == idSupplier) {&#10;                    this.setState({&#10;                        persona: supplier,&#10;                    })&#10;                    break;&#10;                }&#10;            }&#10;        })&#10;    }&#10;&#10;&#10;    loadCustomers = () =&gt; {&#10;        console.log(&quot;Antes del servicio&quot;);&#10;        let request =&quot;Suppliers&quot;&#10;        axios.get(this.url+request).then((response) =&gt; {&#10;            console.log(&quot;Leyendo el servicio&quot;);&#10;&#10;            this.setState({&#10;                customers: response.data.value&#10;            })&#10;        })&#10;        console.log(&quot;Despues del servicio&quot;);&#10;    }&#10;&#10;    componentDidMount() {&#10;        console.log(&quot;Antes del componente&quot;);&#10;        this.loadCustomers();&#10;    }&#10;    cargarDatos=()=&gt;{&#10;        let id;&#10;        id= parseInt(this.cajaId.current.value);&#10;&#10;        console.log(this.state.customers[id-1]);&#10;        let persona=[]&#10;        persona.push(this.state.customers[id-1]);&#10;&#10;        this.setState({&#10;&#10;            persona:persona&#10;        })&#10;        //LOS STATE EN EL CONSOLE.LOG PUEDEN DAR FALSO POSITIVO!!!&#10;        console.log(this.state.persona);&#10;    }&#10;&#10;    render() {&#10;        return (&#10;            &lt;div&gt;&#10;                &lt;h1&gt;Datos Api Suppliers&lt;/h1&gt;&#10;                &lt;form onSubmit={this.generarPeticion}&gt;&#10;                    &lt;label&gt;ID:&lt;/label&gt;&#10;                    &lt;input required type=&quot;number&quot; ref={this.cajaId}/&gt;&#10;&#10;                    &lt;button onClick={this.cargarDatos}&gt;Cargar Datos&#10;                    &lt;/button&gt;&#10;                &lt;/form&gt;&#10;&#10;                {/*PREGUNTAR TAMBIEN COMO FUNCIONA LO DEL RETURN */}&#10;                {&#10;                    this.state.persona.length &gt; 0 &amp;&amp;&#10;&#10;                        &lt;div className=&quot;table-modern-wrapper&quot; style={{ marginTop: &quot;20px&quot; }}&gt;&#10;                            &lt;table className=&quot;table-modern&quot;&gt;&#10;                                &lt;caption&gt;Proveedor&lt;/caption&gt;&#10;                                &lt;tbody&gt;&#10;                                &lt;tr&gt;&lt;td className=&quot;kv-label&quot; data-label=&quot;Campo&quot;&gt;ID&lt;/td&gt;&lt;td data-label=&quot;Valor&quot;&gt;{this.state.persona[0].SupplierID}&lt;/td&gt;&lt;/tr&gt;&#10;                                &lt;tr&gt;&lt;td className=&quot;kv-label&quot; data-label=&quot;Campo&quot;&gt;Company&lt;/td&gt;&lt;td data-label=&quot;Valor&quot;&gt;{this.state.persona[0].CompanyName}&lt;/td&gt;&lt;/tr&gt;&#10;                                &lt;tr&gt;&lt;td className=&quot;kv-label&quot; data-label=&quot;Campo&quot;&gt;Name&lt;/td&gt;&lt;td data-label=&quot;Valor&quot;&gt;{this.state.persona[0].ContactName}&lt;/td&gt;&lt;/tr&gt;&#10;                                &lt;tr&gt;&lt;td className=&quot;kv-label&quot; data-label=&quot;Campo&quot;&gt;Title&lt;/td&gt;&lt;td data-label=&quot;Valor&quot;&gt;{this.state.persona[0].ContactTitle}&lt;/td&gt;&lt;/tr&gt;&#10;                                &lt;tr&gt;&lt;td className=&quot;kv-label&quot; data-label=&quot;Campo&quot;&gt;Address&lt;/td&gt;&lt;td data-label=&quot;Valor&quot;&gt;{this.state.persona[0].Address}&lt;/td&gt;&lt;/tr&gt;&#10;                                &lt;tr&gt;&lt;td className=&quot;kv-label&quot; data-label=&quot;Campo&quot;&gt;City&lt;/td&gt;&lt;td data-label=&quot;Valor&quot;&gt;{this.state.persona[0].City}&lt;/td&gt;&lt;/tr&gt;&#10;                                &lt;tr&gt;&lt;td className=&quot;kv-label&quot; data-label=&quot;Campo&quot;&gt;Region&lt;/td&gt;&lt;td data-label=&quot;Valor&quot;&gt;{this.state.persona[0].Region}&lt;/td&gt;&lt;/tr&gt;&#10;                                &lt;tr&gt;&lt;td className=&quot;kv-label&quot; data-label=&quot;Campo&quot;&gt;Postal Code&lt;/td&gt;&lt;td data-label=&quot;Valor&quot;&gt;{this.state.persona[0].PostalCode}&lt;/td&gt;&lt;/tr&gt;&#10;                                &lt;tr&gt;&lt;td className=&quot;kv-label&quot; data-label=&quot;Campo&quot;&gt;Country&lt;/td&gt;&lt;td data-label=&quot;Valor&quot;&gt;{this.state.persona[0].Country}&lt;/td&gt;&lt;/tr&gt;&#10;                                &lt;tr&gt;&lt;td className=&quot;kv-label&quot; data-label=&quot;Campo&quot;&gt;Phone&lt;/td&gt;&lt;td data-label=&quot;Valor&quot;&gt;{this.state.persona[0].Phone}&lt;/td&gt;&lt;/tr&gt;&#10;                                &lt;tr&gt;&lt;td className=&quot;kv-label&quot; data-label=&quot;Campo&quot;&gt;Fax&lt;/td&gt;&lt;td data-label=&quot;Valor&quot;&gt;{this.state.persona[0].Fax}&lt;/td&gt;&lt;/tr&gt;&#10;                                &lt;tr&gt;&lt;td className=&quot;kv-label&quot; data-label=&quot;Campo&quot;&gt;Home Page&lt;/td&gt;&lt;td data-label=&quot;Valor&quot;&gt;{this.state.persona[0].HomePage}&lt;/td&gt;&lt;/tr&gt;&#10;                                &lt;/tbody&gt;&#10;                            &lt;/table&gt;&#10;                        &lt;/div&gt;&#10;&#10;                }&#10;                &lt;ul&gt;&#10;                    {&#10;                        this.state.customers.map((persona, index) =&gt; {&#10;&#10;                            return &lt;li key={index}&gt;ID: {persona.SupplierID} Nombre: {persona.ContactName}&lt;/li&gt;&#10;                        })&#10;                    }&#10;                &lt;/ul&gt;&#10;            &lt;/div&gt;&#10;        );&#10;&#10;    }&#10;}&#10;&#10;export default ServiceApiSuppliers;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>